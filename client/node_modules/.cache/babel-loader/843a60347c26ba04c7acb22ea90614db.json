{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amarjeet Kumar\\\\Desktop\\\\final\\\\client\\\\src\\\\Pages\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\n//  Copyright (c) [2025] [Rasa Consultancy Services]. All rights reserved.\n//  This software is the confidential and proprietary information of [Rasa Consultancy Services]. \n//  You shall not disclose such confidential information and shall use it only in accordance \n//  with the terms of the license agreement you entered into with [Rasa Consultancy Services].\n//  For more information, please contact: [Your Company Email/Legal Department Contact]\nimport React, { useState } from \"react\";\nimport axios from \"../Services/axiosInterceptor\"; // Custom Axios instance for secure API calls\n\nimport { toast } from \"react-toastify\"; // For user-friendly notifications\n\nimport { useNavigate } from \"react-router-dom\"; // For navigation between pages\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../css/ForgotPassword.css\";\nimport \"../css/signIn.css\";\nimport audios from \"../sound/iphone_16_messege_tone.mp3\"; // Audio notification file\n// ============================\n// COMPONENT: ForgetPassword\n// ============================\n// Description: \n// This component allows a user to reset their password by sending a reset link\n// to their registered email address. Includes audio feedback and toast notifications.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgetPassword = () => {\n  _s();\n\n  const navigate = useNavigate(); // Used for page redirection\n\n  const [email, setEmail] = useState(); // Stores the user's entered email address\n  // ----------------------------------------------------\n  // FUNCTION: playLogoutSound\n  // PURPOSE: Plays an audio notification when the password reset link is sent.\n  // ----------------------------------------------------\n\n  const playLogoutSound = () => {\n    try {\n      const logoutSound = new Audio(audios); // Create a new audio object from imported file\n\n      logoutSound.volume = 0.8; // Set sound volume\n\n      logoutSound.play().catch(() => {\n        console.warn(\"⚠️ Logout sound playback blocked by browser until user interaction.\");\n      });\n    } catch (err) {\n      console.warn(\"⚠️ Audio play error:\", err.message);\n    }\n  }; // ----------------------------------------------------\n  // FUNCTION: handleSubmit\n  // PURPOSE: Handles the form submission event.\n  // Sends a POST request to backend API to generate a reset password link.\n  // Shows toast messages depending on the response.\n  // ----------------------------------------------------\n\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form refresh behavior\n\n    try {\n      // Send API request to backend for password reset\n      const res = await axios.post(\"/api/auth/forget-password\", {\n        email\n      }, // Sending user email as request payload\n      {\n        timeout: 1000\n      } // Request timeout limit (1 second)\n      );\n\n      if (res.status === 200) {\n        toast.success(\"Password reset link has been sent to your email!\");\n        playLogoutSound(); // Play sound notification\n      } else {\n        toast.warn(\"⚠️ Email Not Found or Unable to send reset link.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending reset link:\", error); // Handle specific timeout or network errors\n\n      if (error.code === \"ECONNABORTED\") {\n        toast.success(\"Password reset link has been sent to your email!\");\n        playLogoutSound();\n      } else {\n        toast.error(\"Email Not Found or Unable to send reset link.\");\n      }\n    }\n  }; // ----------------------------------------------------\n  // RETURN: UI Rendering Section\n  // Renders the password reset form and login redirect option\n  // ----------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md w-96 singform\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tex\",\n          children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredStar\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Enter your registered Email\",\n          onChange: e => setEmail(e.target.value) // Update email state\n          ,\n          required: true,\n          className: \"emailinput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login w-full bg-red-500 text-white py-2 rounded\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-center mt-3\",\n      children: [\"If you remember your password?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"singbtn cursor-pointer font-medium underline\",\n        onClick: () => navigate(\"/login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgetPassword, \"mqj0Dti5wBbesdWAeHdnhlDBIic=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","useState","axios","toast","useNavigate","audios","ForgetPassword","navigate","email","setEmail","playLogoutSound","logoutSound","Audio","volume","play","catch","console","warn","err","message","handleSubmit","e","preventDefault","res","post","timeout","status","success","error","code","target","value"],"sources":["C:/Users/Amarjeet Kumar/Desktop/final/client/src/Pages/ForgotPassword.js"],"sourcesContent":["//  Copyright (c) [2025] [Rasa Consultancy Services]. All rights reserved.\n//  This software is the confidential and proprietary information of [Rasa Consultancy Services]. \n//  You shall not disclose such confidential information and shall use it only in accordance \n//  with the terms of the license agreement you entered into with [Rasa Consultancy Services].\n//  For more information, please contact: [Your Company Email/Legal Department Contact]\n\nimport React, { useState } from \"react\";\nimport axios from \"../Services/axiosInterceptor\"; // Custom Axios instance for secure API calls\nimport { toast } from \"react-toastify\"; // For user-friendly notifications\nimport { useNavigate } from \"react-router-dom\"; // For navigation between pages\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../css/ForgotPassword.css\";\nimport \"../css/signIn.css\";\nimport audios from \"../sound/iphone_16_messege_tone.mp3\"; // Audio notification file\n\n// ============================\n// COMPONENT: ForgetPassword\n// ============================\n// Description: \n// This component allows a user to reset their password by sending a reset link\n// to their registered email address. Includes audio feedback and toast notifications.\nconst ForgetPassword = () => {\n  const navigate = useNavigate(); // Used for page redirection\n  const [email, setEmail] = useState(); // Stores the user's entered email address\n\n  // ----------------------------------------------------\n  // FUNCTION: playLogoutSound\n  // PURPOSE: Plays an audio notification when the password reset link is sent.\n  // ----------------------------------------------------\n  const playLogoutSound = () => {\n    try {\n      const logoutSound = new Audio(audios); // Create a new audio object from imported file\n      logoutSound.volume = 0.8; // Set sound volume\n      logoutSound.play().catch(() => {\n        console.warn(\"⚠️ Logout sound playback blocked by browser until user interaction.\");\n      });\n    } catch (err) {\n      console.warn(\"⚠️ Audio play error:\", err.message);\n    }\n  };\n\n  // ----------------------------------------------------\n  // FUNCTION: handleSubmit\n  // PURPOSE: Handles the form submission event.\n  // Sends a POST request to backend API to generate a reset password link.\n  // Shows toast messages depending on the response.\n  // ----------------------------------------------------\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form refresh behavior\n\n    try {\n      // Send API request to backend for password reset\n      const res = await axios.post(\n        \"/api/auth/forget-password\",\n        { email }, // Sending user email as request payload\n        { timeout: 1000 } // Request timeout limit (1 second)\n      );\n\n      if (res.status === 200) {\n        toast.success(\"Password reset link has been sent to your email!\");\n        playLogoutSound(); // Play sound notification\n      } else {\n        toast.warn(\"⚠️ Email Not Found or Unable to send reset link.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending reset link:\", error);\n\n      // Handle specific timeout or network errors\n      if (error.code === \"ECONNABORTED\") {\n        toast.success(\"Password reset link has been sent to your email!\");\n        playLogoutSound();\n      } else {\n        toast.error(\"Email Not Found or Unable to send reset link.\");\n      }\n    }\n  };\n\n  // ----------------------------------------------------\n  // RETURN: UI Rendering Section\n  // Renders the password reset form and login redirect option\n  // ----------------------------------------------------\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md w-96 singform\">\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">Reset Password</h2>\n\n      <div>\n        {/* Password reset form */}\n        <form onSubmit={handleSubmit} className=\"space-y-3\">\n          <p className=\"tex\">\n            Email Address <span className=\"requiredStar\">*</span>\n          </p>\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your registered Email\"\n            onChange={(e) => setEmail(e.target.value)} // Update email state\n            required\n            className=\"emailinput\"\n          />\n\n          <button\n            type=\"submit\"\n            className=\"login w-full bg-red-500 text-white py-2 rounded\"\n          >\n            Send Reset Link\n          </button>\n        </form>\n      </div>\n\n      {/* Redirect to login if password remembered */}\n      <p className=\"text-sm text-center mt-3\">\n        If you remember your password?{\" \"}\n        <span\n          className=\"singbtn cursor-pointer font-medium underline\"\n          onClick={() => navigate(\"/login\")}\n        >\n          Login\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}